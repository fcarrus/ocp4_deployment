items:
  - kind: Namespace
    apiVersion: v1
    metadata:
      name: openshift-acme
      annotations:
        openshift.io/node-selector: ""
      labels:
        openshift.io/cluster-monitoring: "true"

  - kind: ClusterRole
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: openshift-acme
      labels:
        app: openshift-acme
    rules:
      - apiGroups:
          - "route.openshift.io"
        resources:
          - routes
        verbs:
          - create
          - get
          - list
          - watch
          - update
          - patch
          - delete
          - deletecollection

      - apiGroups:
          - "route.openshift.io"
        resources:
          - routes/custom-host
        verbs:
          - create

      - apiGroups:
          - ""
        resources:
          - configmaps
          - services
          - secrets
        verbs:
          - create
          - get
          - list
          - watch
          - update
          - patch
          - delete

      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - create
          - update
          - patch

      - apiGroups:
          - ""
        resources:
          - limitranges
        verbs:
          - get
          - list
          - watch

      - apiGroups:
          - "apps"
        resources:
          - replicasets
        verbs:
          - create
          - get
          - list
          - watch
          - update
          - patch
          - delete

  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: openshift-acme
      namespace: openshift-acme
      labels:
        app: openshift-acme
      annotations:
    spec:
      selector:
        matchLabels:
          app: openshift-acme
      replicas: 1
      strategy:
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: openshift-acme
        spec:
          serviceAccountName: openshift-acme
          containers:
          - name: openshift-acme
            image: quay.io/tnozicka/openshift-acme:controller
            imagePullPolicy: Always
            args:
            - --exposer-image=quay.io/tnozicka/openshift-acme:exposer
            - --loglevel=4

  # Live - trusted Let's Encrypt CA
  # - kind: ConfigMap
  #   apiVersion: v1
  #   metadata:
  #     name: letsencrypt-live
  #     namespace: openshift-acme
  #     annotations:
  #       "acme.openshift.io/priority": "100"
  #     labels:
  #       managed-by: "openshift-acme"
  #       type: "CertIssuer"
  #   data:
  #     "cert-issuer.types.acme.openshift.io": '{"type":"ACME","acmeCertIssuer":{"directoryUrl":"https://acme-v02.api.letsencrypt.org/directory"}}'

  # Staging - untrusted, testing Let's Encrypt CA
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: letsencrypt-staging
      namespace: openshift-acme
      annotations:
        "acme.openshift.io/priority": "50"
      labels:
        managed-by: "openshift-acme"
        type: "CertIssuer"
    data:
      "cert-issuer.types.acme.openshift.io": '{"type":"ACME","acmeCertIssuer":{"directoryUrl":"https://acme-staging-v02.api.letsencrypt.org/directory"}}'

  - kind: ServiceAccount
    apiVersion: v1
    metadata:
      name: openshift-acme
      namespace: openshift-acme
      labels:
        app: openshift-acme

  - kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: openshift-acme
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: openshift-acme
    subjects:
    - kind: ServiceAccount
      name: openshift-acme
      namespace: openshift-acme