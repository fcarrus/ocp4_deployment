- name: "Create Namespace : {{ _ocp4_deployment_operator_namespace }}"
  delegate_to: localhost
  run_once: true
  kubernetes.core.k8s:
    definition:
      - kind: Namespace
        apiVersion: v1
        metadata:
          name: "{{ _ocp4_deployment_operator_namespace }}"
          annotations:
            openshift.io/node-selector: ""
          labels:
            openshift.io/cluster-monitoring: "true"

- name: "Retrieve OperatorGroup for namespace : {{ _ocp4_deployment_operator_namespace }}"
  delegate_to: localhost
  run_once: true
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1
    kind: OperatorGroup
    namespace: "{{ _ocp4_deployment_operator_namespace }}"
  register: _ocp4_deployment_namespace_operatorgroup

- name: If OperatorGroup does not exist
  when: _ocp4_deployment_namespace_operatorgroup.resources | length == 0
  block:

    - name: "Create OperatorGroup (single-namespace): {{ _ocp4_deployment_operator_name }}"
      delegate_to: localhost
      run_once: true
      when: not _ocp4_deployment_operator_all_namespaces | d(false) | bool
      kubernetes.core.k8s:
        definition:
          - apiVersion: operators.coreos.com/v1
            kind: OperatorGroup
            metadata:
              name: "{{ _ocp4_deployment_operator_name }}"
              namespace: "{{ _ocp4_deployment_operator_namespace }}"
            spec:
              targetNamespaces:
                - "{{ _ocp4_deployment_operator_namespace }}"

    - name: "Create OperatorGroup (all-namespaces): {{ _ocp4_deployment_operator_name }}"
      delegate_to: localhost
      run_once: true
      when: _ocp4_deployment_operator_all_namespaces | d(false) | bool
      kubernetes.core.k8s:
        definition:
          - apiVersion: operators.coreos.com/v1
            kind: OperatorGroup
            metadata:
              name: "{{ _ocp4_deployment_operator_name }}"
              namespace: "{{ _ocp4_deployment_operator_namespace }}"

- name: "Install Operator : {{ _ocp4_deployment_operator_name }}"
  delegate_to: localhost
  run_once: true
  kubernetes.core.k8s:
    definition:
      kind: Subscription
      apiVersion: operators.coreos.com/v1alpha1
      metadata:
        name: "{{ _ocp4_deployment_operator_name }}"
        namespace: "{{ _ocp4_deployment_operator_namespace }}"
      spec:
        channel: "{{ _ocp4_deployment_operator_channel }}"
        installPlanApproval: "{{ _ocp4_deployment_operator_update_approval | d('Automatic') }}"
        name: "{{ _ocp4_deployment_operator_name }}"
        source: "{{ _ocp4_deployment_operator_source | d('redhat-operators') }}"
        sourceNamespace: "{{ _ocp4_deployment_operator_sourcenamespace | d('openshift-marketplace') }}"

- name: "Retrieve InstallPlan for : {{ _ocp4_deployment_operator_name }}"
  delegate_to: localhost
  run_once: true
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    name: "{{ _ocp4_deployment_operator_name }}"
    namespace: "{{ _ocp4_deployment_operator_namespace }}"
    kind: Subscription
  register: _ocp4_deployment_configure_subscription_information
  retries: 120
  delay: 5
  until: _ocp4_deployment_configure_subscription_information.resources[0].status.installplan.name is defined

- name: With InstallPlan
  vars:
    _ocp4_deployment_operator_installplan: "{{ _ocp4_deployment_configure_subscription_information.resources[0].status.installplan.name }}"
  block:

    - name: "Approve InstallPlan: {{ _ocp4_deployment_operator_name }}"
      when: _ocp4_deployment_operator_update_approval | d('Automatic') != 'Automatic'
      delegate_to: localhost
      run_once: true
      kubernetes.core.k8s_json_patch:
        kind: InstallPlan
        api_version: operators.coreos.com/v1alpha1
        name: "{{ _ocp4_deployment_operator_installplan }}"
        namespace: "{{ _ocp4_deployment_operator_namespace }}"
        patch:
          - op: add
            path: /spec/approved
            value: true

    - name: "Wait for InstallPlan to Complete : {{ _ocp4_deployment_operator_installplan }}"
      delegate_to: localhost
      run_once: true
      kubernetes.core.k8s_info:
        api_version: operators.coreos.com/v1alpha1
        name: "{{ _ocp4_deployment_operator_installplan }}"
        namespace: "{{ _ocp4_deployment_operator_namespace }}"
        kind: InstallPlan
      register: _ocp4_deployment_installplan_completion
      retries: 120
      delay: 5
      until: _ocp4_deployment_installplan_completion.resources[0].status.phase == "Complete"

- name: If Console Plugin is defined
  when:
    - _ocp4_deployment_operator_enable_consoleplugin is defined
    - _ocp4_deployment_operator_enable_consoleplugin != ""
  block:

    # Workaround for merging strategy
    - name: Retrieve list of Console Plugins
      delegate_to: localhost
      run_once: true
      kubernetes.core.k8s_info:
        kind: Console
        api_version: operator.openshift.io/v1
        name: cluster
      register: _ocp4_deployment_cluster_consoleplugin_info

    # Add the plugin to the list
    - name: Enable Console Plugin
      delegate_to: localhost
      run_once: true
      kubernetes.core.k8s:
        kind: Console
        name: cluster
        api_version: operator.openshift.io/v1
        definition:
          spec:
            plugins: "{{ (
              _ocp4_deployment_cluster_consoleplugin_info.resources[0].spec.plugins | d([])
                +
              [ _ocp4_deployment_operator_enable_consoleplugin ]
              ) | unique
              }}"

- name: Create Operator Custom Resources # noqa: args[module]
  delegate_to: localhost
  run_once: true
  kubernetes.core.k8s: "{{ customresource }}"
  loop: "{{ _ocp4_deployment_operator_create_resources | d([]) }}"
  loop_control:
    loop_var: customresource

# code: language=ansible
